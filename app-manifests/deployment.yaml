apiVersion: apps/v1
kind: Deployment
metadata: 
  name: solution-msr
  namespace: kplogesh-dev
spec:
  selector:
    matchLabels:
      app: solution-msr
      version: v1.0
      component: msr
  replicas: 1
  template:
    metadata:
      labels:
        app: solution-msr
        version: v1.0
        component: msr
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "solution-msr"            
      containers:
        - name: solution-container       
          image: image-registry.openshift-image-registry.svc:5000/kplogesh-dev/solution-msr:latest
          imagePullPolicy: IfNotPresent        
        # Resources required for the apigateway to function. CPUs and Memory configurations.
          resources:
            limits:
              cpu: "1"
              memory: "1Gi" 
            requests:
              cpu: "0.25"
              memory: "500Mi"           
          ports:
            - containerPort: 5555
        # Liveness probe to check whether container is active. Restart happens when liveness probe fails.
          livenessProbe:
            tcpSocket:
              port: 5555
            timeoutSeconds: 5
            initialDelaySeconds: 60
            failureThreshold: 5
            periodSeconds: 20
            successThreshold: 1
        # Readiness probe to check whether pod is ready to serve the requests. Traffic will not be injected unless readiness probes passes.
          readinessProbe:
            tcpSocket:
              port: 5555
            timeoutSeconds: 5
            initialDelaySeconds: 60
            failureThreshold: 5
            periodSeconds: 20
            successThreshold: 1            
        # Volume mount for Terracotta/Integration Server license key.
          volumeMounts:
            - mountPath: /opt/softwareag/IntegrationServer/bin/../config/licenseKey.xml
              subPath: licenseKey.xml
              name: licensekey      
            - name: report-volume
              mountPath: /opt/softwareag/test/reports/        
      volumes:
        - name: licensekey
          configMap:
              name: webmethodslicensekeys
        - name: report-volume
          persistentVolumeClaim:
            claimName: ts-report-storage